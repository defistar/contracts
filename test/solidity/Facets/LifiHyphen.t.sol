// from: 0x7c085b8a1c4d6c7013b2ed6d15b18dd3d5e5ecea
// contract: 0x1231deb6f5749ef6ce6943a275a1d3e7486f4eae
// blocknumber:  16332824
// data: 0x8bf6ef9900000000000000000000000000000000000000000000000000000000000000208b50a394e4da5a509b554d7640dad34a2609f08885ddb7a4ba26ae6b287cd1b5000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000007c085b8a1c4d6c7013b2ed6d15b18dd3d5e5ecea0000000000000000000000000000000000000000000000000000000077359400000000000000000000000000000000000000000000000000000000000000a86a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000668797068656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e7472616e73666572746f2e78797a000000000000000000000000000000000000

// SPDX-License-Identifier: Unlicense
pragma solidity 0.8.17;

import { IERC20, SafeERC20 } from "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol";
import {Test} from "../../../lib/forge-std/src/Test.sol";
import {Vm} from "../../../lib/forge-std/src/Vm.sol";
import "../../../lib/forge-std/src/console.sol";

contract Lifi is Test {
    address constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;

    function setUp() public {
        uint256 fork = vm.createFork(vm.envString("ETH_NODE_URI_MAINNET"), 16332824);
        vm.selectFork(fork);
    }

    //https://etherscan.io/tx/0xab16fbbcd28e802fcc55b77c95f0c283f93b7b3efb090616adc8adb0d6515508
    function testBridgeUSDC() public {

        deal(USDC, address(0x7C085b8a1C4D6C7013b2ed6D15B18dD3d5e5ecEa), 2000e6);

        vm.startPrank(address(0x7C085b8a1C4D6C7013b2ed6D15B18dD3d5e5ecEa));
        IERC20(USDC).approve(address(0x1231DEB6f5749EF6cE6943a275A1D3E7486F4EaE), 2000e6);

        uint256 gasStockBeforeBridge = gasleft();
        (bool success, ) = address(0x1231DEB6f5749EF6cE6943a275A1D3E7486F4EaE).call(hex"8bf6ef9900000000000000000000000000000000000000000000000000000000000000208b50a394e4da5a509b554d7640dad34a2609f08885ddb7a4ba26ae6b287cd1b5000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000007c085b8a1c4d6c7013b2ed6d15b18dd3d5e5ecea0000000000000000000000000000000000000000000000000000000077359400000000000000000000000000000000000000000000000000000000000000a86a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000668797068656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e7472616e73666572746f2e78797a000000000000000000000000000000000000");
        uint256 gasStockAfterBridge = gasleft();

        console.log(
            "lifi-Bridge USDC from Ethereum to Arbitrum costed: ", success , gasStockBeforeBridge - gasStockAfterBridge
        );
        vm.stopPrank();
    }
}
